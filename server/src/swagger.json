{
	"openapi": "3.0.2",
	"info": {
		"title": "Node Swagger Example",
		"description": "This is just an example of how to use swagger in a node/express application",
		"version": "1.0.0",
		"contact": {
			"name": "Victor Badar√≥",
			"email": "victor.badaro@fatec.sp.gov.br",
			"url": "https://github.com/victorbadaro"
		}
	},
	"paths": {
		"/clients": {
			"get": {
				"tags": [
					"Client"
				],
				"summary": "List Clients",
				"description": "List created Clients with optional limit and offset parameters",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"description": "Number of items to return",
						"required": false,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"maximum": 100
						}
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip",
						"required": false,
						"schema": {
							"type": "integer",
							"minimum": 0
						}
					}
				],
				"responses": {
					"200": {
						"description": "A json array of users",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "number"
											},
											"name": {
												"type": "string"
											},
											"email": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"id": 1,
										"name": "Keira Holman",
										"email": "keira.holman@email.com"
									},
									{
										"id": 2,
										"name": "Tiffany Harding",
										"email": "tiffany.harding@email.com"
									},
									{
										"id": 3,
										"name": "Riya Pittman",
										"email": "riya.pittman@email.com"
									},
									{
										"id": 4,
										"name": "Liberty Kent",
										"email": "liberty.kent@email.com"
									}
								]
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Client"],
				"summary": "Create a client",
				"description": "Create a new client",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"phone": {
										"type": "string"
									},
									"gender": {
										"type": "string",
										"title": "Gender Enum"
									},
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"avatar": {
										"type": "string"
									},
									"birthDate": {
										"type": "string"
									},
									"admin": {
										"type": "boolean"
									},
									"address": {
										"type": "object",
										"title": "Address entity"
									},
									"createdDate": {
										"type": "string"
									},
									"roles": {
										"type": "array",
										"title": "Roles Items"
									}
								},
								"example": {
									"name": "Shauna Farrell",
									"email": "shauna.farrell@email.com",
									"phone": "123-456-7890",
									"gender": "female",
									"firstName": "Shauna",
									"lastName": "Farrell",
									"avatar": "https://example.com/avatar.jpg",
									"birthDate": "1990-01-01",
									"admin": false,
									"address": {
										"city": "New York",
										"country": "USA",
										"street": "123 Main St",
										"house": "Apt 1",
										"zip": "10001"
									},
									"createdDate": "2022-03-30",
									"roles": ["user"]
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"gender": {
											"type": "string",
											"title": "Gender Enum"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"avatar": {
											"type": "string"
										},
										"birthDate": {
											"type": "string"
										},
										"admin": {
											"type": "boolean"
										},
										"address": {
											"type": "object",
											"title": "Address entity"
										},
										"createdDate": {
											"type": "string"
										},
										"roles": {
											"type": "array",
											"title": "Roles Items"
										}
									},
									"example": {
										"name": "Shauna Farrell",
										"email": "shauna.farrell@email.com",
										"phone": "123-456-7890",
										"gender": "female",
										"firstName": "Shauna",
										"lastName": "Farrell",
										"avatar": "https://example.com/avatar.jpg",
										"birthDate": "1990-01-01",
										"admin": false,
										"address": {
											"city": "New York",
											"country": "USA",
											"street": "123 Main St",
											"house": "Apt 1",
											"zip": "10001"
										},
										"createdDate": "2022-03-30",
										"roles": ["user"]
									}
								}
							}
						}
					},
					"400": {
						"description": "Email is already in use",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string",
											"example": "Email is already in use"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/clients/{id}": {
			"get": {
				"tags": ["Client"],
				"summary": "Get Client by ID",
				"description": "Get a Client by their ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to get",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Client found"
					},
					"404": {
						"description": "Client not found"
					}
				}
			},
			"put": {
				"tags": ["Client"],
				"summary": "Update a Client",
				"description": "Update an existing Client",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the user to update",
						"required": true,
						"schema": {
							"type": "string",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"phone": {
										"type": "string"
									},
									"gender": {
										"type": "string",
										"title": "Gender Enum"
									},
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"avatar": {
										"type": "string"
									},
									"birthDate": {
										"type": "string"
									},
									"admin": {
										"type": "boolean"
									},
									"address": {
										"type": "object",
										"title": "Address entity"
									},
									"createdDate": {
										"type": "string"
									},
									"roles": {
										"type": "array",
										"title": "Roles Items"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Client updated"
					},
					"400": {
						"description": "Invalid request data"
					},
					"404": {
						"description": "Client not found"
					}
				}
			}
		}
	}
}
